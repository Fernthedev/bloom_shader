
constexpr const char* gaussian_fs_glsl = "#version 310 es\n"
"\n"
"precision mediump float;\n"
"\n"
"out vec4 FragColor;\n"
"\n"
"in vec2 TexCoords;\n"
"\n"
"uniform sampler2D image;\n"
"\n"
"uniform bool horizontal;\n"
"float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\n"
"\n"
"void main()\n"
"{\n"
"    ivec2 texSize = textureSize(image, 0); // gets size of single texel\n"
"    vec2 tex_offset = vec2(1.0, 1.0);\n"
"    tex_offset.x /= float(texSize.x);\n"
"    tex_offset.y /= float(texSize.y);\n"
"\n"
"\n"
"    vec3 result = texture(image, TexCoords).rgb * weight[0]; // current fragment's contribution\n"
"    if(horizontal)\n"
"    {\n"
"        for(int i = 1; i < 5; ++i)\n"
"        {\n"
"            result += texture(image, TexCoords + vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n"
"            result += texture(image, TexCoords - vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n"
"        }\n"
"    }\n"
"    else\n"
"    {\n"
"        for(int i = 1; i < 5; ++i)\n"
"        {\n"
"            result += texture(image, TexCoords + vec2(0.0, tex_offset.y * float(i))).rgb * weight[i];\n"
"            result += texture(image, TexCoords - vec2(0.0, tex_offset.y * float(i))).rgb * weight[i];\n"
"        }\n"
"    }\n"
"    FragColor = vec4(result, 1.0);\n"
"}\n"
;
